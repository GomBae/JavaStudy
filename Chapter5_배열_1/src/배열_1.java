/*
 * 182page 
 * 배열 --> 여러개의 변수를 하나로 묶어서 관리
 * --------------------------> 일차원 배열, 다차원 배열, 가변배열
 * 							----------
 * 						
 * 배열
 * 		장점 : 변수 여러개를 한개의 이름으로 제어가능(반복문을 사용하기 쉽다)
 * 			  연속적으로 메모리 배치 ( 인덱스 번호를 이용하여 처리가 가능)
 * 		단점 : 고정적이다 ==> 가변형 ( 컬렉션 ) 
 * 			  같은 데이터형만 모아서 관리
 * 
 * 1. 배열(변수의 일종) ==> []
 * 	1) 선언 / 초기화
 * 		데이터형[] 배열명; //권장사항
 * 		----------- 데이터형 ( 참조변수 ==> 메모리 주소를 이용하여 접근하는 방식) => 배열/클래스/인터페이스
 * 			stack   / heap
 * 			-----   / ----- 
 * 			메모리주소 / 실제 데이터가 저장되는 공간 ( 메모리 ==> 주소값)
 * 		데이터형 배열명[]; // C언어 호환
 * 
 * 	2) 초기화
 * 		데이터형[] 배열명={값,...}
 * 		데이터형[] 배열명=new 데이터형[배열갯수]
 * 		배열명[인덱스]=값;
 * 
 * 		int a;
 * 		배열명[0] = a;
 * 
 */
public class 배열_1 {

	public static void main(String[] args) {
		
		int arr[]=new int[5];
		
		for(int i=0; i<5; i++) {
			arr[i] = (int)(Math.random()*100) + 1;
		}
		
		//값을 출력
		// 향상된 for문 forEach ( 출력 전용 ) 
		
		//for(데이터형 변수:배열명)
		//	 -----------
		//  실제 배열에 저장된 값을 읽어온다 ( 항상 같은 데이터형이나 큰데이터형을 사용)
		for(int i:arr) {
			System.out.print(i+" ");
		}
		
		//배열 변경 후 다시 출력
		System.out.println();
		
		

	}

}
