/*
 * 1. 변수 (데이터형)
 * 2. 식별자
 * 3. 연산자 (증감연산자, 부정연산자, 형변환,산술,비교,논리,대입)
 * 4. 제어문 (조건문,반복문,반복제어문)
 * 			if    for,while break,continue
 * 5. 관련된 데이터를 묶는 방법
 * 6. 관련된 명령문을 묶는 방법
 * ---------------------- => 클래스(데이터 묶음, 메소드 묶음)
 * ==> 부품(조립)
 * 1) 형식, 문법 ==> 응용(순서) 
 * 2) 배열
 * 		= 같은데이터형을 여러개 모아서 관리
 * 		= 메모리 한곳에 모아서 관리 (연속적인 메모리 구조:메모리 크기가 동일)
 * 		= 단점 : 고정적 (한번 지정하면 변경할 수 없다)
 * 								----------- 큰 배열을 다시 생성(메모리 누수)
 * 		= 종류 : 1차원 배열, 2차원 배열, 다차원 배열, 가변 배열
 * 				변수 : 한개만 저장
 * 				---- 여러개 존재 : 1차원 배열
 * 				----- 1차원배열 여러개 : 2차원배열 
 * 
 * 3) 배열의 선언과 생성
 * 		1. 선언
 * 			데이터형[] 배열명;
 * 			데이터형 배열명[];
 * 			----------------- 배열은 null(실제 저장 데이터가 저장된 위치(메모리 주소))
 * 								=> null일 경우 에러발생(NullPointerException)
 * 								=> 참조형
 * 		int[] arr;
 * 		
 * 		stack에 저장
 * 		arr
 * 		----------
 * 
 * 4) 초기화 (값을 대입)
 * 		연속적인 메모리를 몇개 넣을것인가
 * 		1. 데이터형[] 배열명={값,값,...}
 * 			=> 데이터형[] 배열명;
 * 			   배열명=new 데이터형[]{값,값..}
 * 		2. 데이터형[] 배열명=new 데이터형[5]; => 자동 초기화
 * 			int ==> 0
 * 			long ==> 0L
 * 			double ==> 0.0
 * 			boolean ==> false
 * 			클래스:String ==> null
 * 		3. 생성
 * 			int[] arr=new int[5];
 * 		* 배열범위를 초과하면 오류 발생 : ArrayIndexOutOhBoundsException
 * 			for(int i=0;i<=arr.length;i++) <== Error
 * 		
 * 		** 인덱스 번호: 순차적으로 설정
 * 			=> for 이용
 * 			=> for-each 이용
 * 			
 * 	==> 변수
 * 		=> 지역변수(메소드 안에 선언되는 변수) ==> 메소드에서 사용이 가능 => {}이 종료되면 자동으로 사라지는 변수
 * 		=> 매개변수 : 사용자의 요청을 받는 역할 메소드
 * 		=> 전역변수 : 클래스 전체에서 사용되는 변수 ( 프로그램 종료시까지 사라지지 않는다 )
 * 			= 인스턴스변수
 * 			= 공유변수
 * 		-----------------------
 * 		
 */
public class 배열선언 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int[] arr=new int[5];
		arr[0]=100;
		arr[1]=200;
		arr[2]=300;
		arr[3]=400;
		arr[4]=500;
		
//		for(int i=0;i<arr.length;i++) {
//			arr[i]=(i+1)*100;
//		}
		
		for(int i:arr) {
			System.out.print(i + " ");
		}
		/*
		 * 1. 데이터형 결정
		 * 2. 갯수
		 * 3. 초기화
		 * 4. 활용
		 * 5. 출력
		 * ----------- 웹( 삭제, 조건검색 )
		 */
		

	}

}
